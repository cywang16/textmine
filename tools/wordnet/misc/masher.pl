#!/usr/bin/perl
 use lib ("/home/manuk/textmine-0.2/");

 #*-----------------------------------------------------------
 #*- masher.pl
 #*-
 #*-  Create a miscellaneous file to add words not present
 #*-  in the WordNet dictionary - conjunctions, prepositions,
 #*-  and some nouns.
 #*- 
 #*-  Input Files: c.dat, o.dat, d.dat, p.dat, i.dat, n.dat
 #*-  Output Files: misc.idx and misc.dat or index.misc and data.misc
 #*-----------------------------------------------------------
 use strict; use warnings;
 use TextMine::DbCall;
 use TextMine::Constants;
 
 #*-- get the database handle
 my ($command, $dbh, $sth, $db_msg);
 ($dbh) = TextMine::DbCall->new ( 'Host' => '',
    'Userid' => 'root', 'Password' => '', 'Dbname' => 'test');

 #*-- create an empty idx table
 print "Started\n";
 $dbh->execute_stmt("drop table if exists idx");
 $command = <<"EOF";
   create table idx (
    lemma   		char(50) not null,
    pos     		char(1) not null,
    synset_cnt 		integer unsigned,
    synset_offset  	char(8),
   unique index ind_idx (lemma, pos)
 )
EOF
 $dbh->execute_stmt("$command");

 #*-- load the idx table from the .dat files and create the synset hash
 print "Cleaned the idx table\n";
 my %synset = my %descr = ();
 foreach (qw/c o d p i n/)
  {
   my $ifile = $_ . '.dat';
   open (IN, "$ifile") || die "Unable to open $ifile $!\n";
   while (my $inline = <IN>)
    { chomp($inline); $inline =~ s/\r//;
      next if ($inline =~ /^#/);
      my ($lemma, $pos, $synset, $descr) = $inline =~ /^(.*?):(.):(.*?):(.*)$/;
      $synset =~ s/^\s+//; $synset =~ s/\s+$//; $synset =~ s/\s+/ /g;
      my $count = 1; $count ++ while ($synset =~ /\S+/g);
      my @syn =  ($synset) ? split/\s/, $synset: (); 
      @syn = sort ( @syn, $lemma); 
      $synset{"$pos" . "@syn"}++;
      unless ($descr{$pos . "@syn"})
       { $descr{"$pos" . "@syn"} =  ($descr) ? $descr: ''; }
      
      $lemma = $dbh->quote($lemma);
      $command = "insert into idx values ($lemma, '$pos', $count, ' ')";
      ($sth, $db_msg) = $dbh->execute_stmt($command); 
      print ("C: $command failed \n") if ($db_msg);
    }
   close(IN);
  }
 print "Loaded the idx table\n";

 #*-- verify the synset hash
 foreach my $syn (sort keys %synset)
  { 
    my @temp = split/\s/, $syn; my $num_mems = @temp;
    if ($synset{$syn} != $num_mems) 
     { print "Error in synset -->$syn<-- \n" if ($synset{$syn} != $num_mems);
       goto EXIT; }
  }
 print "Verified the synset hash\n";

 #*-- create the data file and build the synset offset hash
 my $dfile = ($OSNAME =~ /win/) ? "misc.dat": "data.misc";
 open DAT, ">../$dfile" || die "Unable to open $dfile $!\n";
 binmode DAT, ":raw";

 my %offset = ();
 print DAT << "EOF";
  1 This software is NOT part of Wordnet. and is being provided to you
  2 by Manu Konchady under the Perl Artistic License (PAL)
  3 This is the data file for additional words in the Wordnet format
  4 Do not edit this file. Change the .dat files and rerun masher.pl
EOF
 foreach my $syn (sort keys %synset)
  {
   #*-- find the current offset and prefix any zeroes
   my $offset = tell(DAT); $offset = '0' x (8 - length($offset)) . $offset;
   $offset{$syn} = $offset;
   my $descr = $descr{$syn};
   $syn =~ s/^(.)//; my $pos = $1;
   my @temp = split/\s/, $syn; my $num_mems = @temp;   
   $num_mems = '0' x (2 - length($num_mems)) . $num_mems;

   #*-- build and print the line
   print DAT "$offset 00 $pos $num_mems ";
   foreach (@temp) { print DAT "$_ 0 "; } 
   print DAT "000 |$descr\n";
  }
 close(DAT);
 print "Built the miscellaneous data file\n";

 #*-- update the table with the offsets
 foreach my $syn (sort keys %synset)
  {
   my $offset = $offset{$syn}; $syn =~ s/^(.)//; my $pos = $1;
   my @temp = split/\s/, $syn;
   foreach my $lemma (@temp)
    { $lemma = $dbh->quote($lemma);
      $command = "update idx set synset_offset = '$offset' " .
                 "where lemma = $lemma and pos = '$pos'";
      $dbh->execute_stmt($command);
    }
  }
 print "Updated the idx table\n";

 #*-- dump the idx table
 my $ifile = ($OSNAME =~ /win/) ? "misc.idx": "index.misc";
 open IDX, ">../$ifile" || die "Unable to open $ifile $!\n";
 binmode IDX, ":raw";

 print IDX << "EOF";
  1 This software is NOT part of Wordnet. and is being provided to you
  2 by Manu Konchady under the Perl Artistic License (PAL)
  3 This is the index file for additional words in the Wordnet format
  4 Do not edit this file. Change the .dat files and rerun masher.pl
EOF
 
 $command = "select * from idx order by lemma asc";
 ($sth, $db_msg) = $dbh->execute_stmt($command);
 print ("C: $command failed \n") if ($db_msg);
 while (my $temp = $dbh->fetch_row($sth, 1))
  {  
   my %idx = %{$temp};
   print IDX "$idx{lemma} $idx{pos} $idx{synset_cnt} 0 $idx{synset_cnt} " .
             "$idx{synset_offset}\n"; }
 
 close(IDX);
 print "Built the miscellaneous index file\n";

EXIT:
 $dbh->disconnect_db();
 print "Ended\n";
 exit(0);
